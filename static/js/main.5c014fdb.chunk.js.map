{"version":3,"sources":["logo.svg","Store/actions.js","Components/Pictuers/p1.png","Components/Home/Home.js","Store/reducers/WeatherReducer.js","Store/reducers/ReducerUtils.js","Store/store.js","Components/Favorites/Favorites.js","App.js","reportWebVitals.js","index.js"],"names":["actions","Proxy","get","target","prop","undefined","args","type","actionName","replace","toUpperCase","payload","Home","regions","useSelector","state","WeatherReducer","currentCity","weatherText","key","temp","date","temperature","dispatch","text","useDispatch","favorite","useState","date1","setDate","temperature1","setTemperature","text1","setText","degree","setDegree","to","setTo","searchCity","event","a","axios","value","res","addToRegions","data","chooseCity","city","setCurrentCity","LocalizedName","Key","setKey","res1","setWeatherText","WeatherText","y","Temperature","Metric","Value","Math","round","setTemp","res2","i","push","DailyForecasts","Date","split","Day","IconPhrase","x","Maximum","Minimum","b","addToDate","addToTemperature","addToText","className","class","onChange","map","item","id","onClick","style","backgroundColor","addToFavourites","borderRadius","width","height","src","p1","alt","initialState","favourites","fiveDays","weather","action","console","log","newFavourites","deleteFromFavourites","arr","filter","name","produce","handlers","handler","toLowerCase","v","createReducer","reducer","combineReducers","store","createStore","window","Favorites","history","useHistory","favorites","toHomePage","index","fontSize","e","App","color","fontFamily","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c014fdb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//import { SET_PRODUCT_NAME } from \"../components/ProductReducer\";\r\nfunction convertActionNameToType(actionName) {\r\n    return actionName.replace(/([A-Z])/g, \"_$1\").toUpperCase();\r\n}\r\n\r\nexport const actions = new Proxy(\r\n    {},\r\n    {\r\n        get: function (target, prop) {\r\n            if (target[prop] === undefined)\r\n                return function (args) {\r\n                    return {\r\n                        type: convertActionNameToType(prop),\r\n                        payload: args\r\n                    };\r\n\r\n                };\r\n\r\n            else return target[prop];\r\n        }\r\n    }\r\n);","export default __webpack_public_path__ + \"static/media/p1.49f353ed.png\";","\r\nimport React from 'react';\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { actions  } from '../../Store/actions';\r\nimport './Home.css';\r\nimport { matchPath } from 'react-router-dom';\r\nimport p1 from '../Pictuers/p1.png'\r\nexport default function Home() {\r\n    \r\n    const regions = useSelector((state) => state.WeatherReducer.regions);\r\n    const currentCity = useSelector((state) => state.WeatherReducer.currentCity);\r\n    const weatherText = useSelector((state) => state.WeatherReducer.weatherText);\r\n    const key = useSelector((state) => state.WeatherReducer.key);\r\n    const temp = useSelector((state) => state.WeatherReducer.temp);\r\n    const date = useSelector((state) => state.WeatherReducer.date);\r\n    const temperature = useSelector((state) => state.WeatherReducer.temperature);\r\n    const text = useSelector((state) => state.WeatherReducer.text);\r\n    const dispatch = useDispatch();\r\n    let favorite= { \"id\":key, \"name\":currentCity,\"weatherText\":weatherText}\r\n    const [date1 ,setDate]= useState([]);\r\n    const [temperature1 ,setTemperature]= useState([]);\r\n    const [text1 ,setText]= useState([]);\r\n    const [degree ,setDegree]= useState(\"c\");\r\n    const [to ,setTo]= useState(\"f\");\r\n    \r\n\r\n     // basic urls to the api\r\n    // const baseURL =\"http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=ZZ8kOGT0i2XPkDu8NgiJszZGEsIXGvk1&q=\"\r\n    // const currentWeather =\"http://dataservice.accuweather.com/currentconditions/v1/\"\r\n    // const fiveDaysUrl= \"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\"\r\n\r\n    const baseURL =\"http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=G2zVeiJtARitzgfWgp96KsAvvkQju4XL&q=\"\r\n    const currentWeather =\"http://dataservice.accuweather.com/currentconditions/v1/\"\r\n    \r\n    const fiveDaysUrl= \"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\"\r\nconst goePosition=\"http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=3RGvmyvc1YFlR5Gf5FvUGNOHryOAUcMX&q=31.768318%2C35.213711\"\r\n\r\n\r\n    const searchCity = async (event) => {\r\n        debugger\r\n        //Request to api autocomplete cities\r\n        const res =  await axios.get(`${baseURL}${event.target.value}&language=en-us`)\r\n        \r\n        //set the regiins\r\n        dispatch(actions.addToRegions(res.data))\r\n       \r\n    }\r\n\r\n\r\n    const chooseCity = async (city) => {\r\n        debugger\r\n        //claer the arrays\r\n        setDate([]);\r\n        setTemperature([]);\r\n        setText([]);\r\n        \r\n        //set the ciytName\r\n        dispatch(actions.setCurrentCity(city.LocalizedName));\r\n        const Key=city.Key;\r\n        dispatch(actions.setKey(city.Key));\r\n       \r\n        \r\n//Request to api currentWeather by key\r\n        const res1 = await axios.get(`${currentWeather}${Key}?apikey=G2zVeiJtARitzgfWgp96KsAvvkQju4XL&details=true`);\r\n        //currentconditions/v1/57918?apikey=3RGvmyvc1YFlR5Gf5FvUGNOHryOAUcMX&details=true\r\n        \r\n        //set the weathet text\r\n        dispatch(actions.setWeatherText(res1.data[0].WeatherText));\r\n        //get the temp and round\r\n        let y=res1.data[0].Temperature.Metric.Value;\r\n        y=Math.round(y);\r\n        //set the temp\r\n        dispatch(actions.setTemp(y));\r\n        debugger\r\n        const res2 = await axios.get(`${fiveDaysUrl}${Key}?apikey=G2zVeiJtARitzgfWgp96KsAvvkQju4XL&details=true&metric=true`);\r\n      \r\n        for(let i=0;i<=4;i++)\r\n     {\r\n        // set the arrays of dates and text and temp for the next five days\r\n        date1.push((res2.data.DailyForecasts[i].Date.split(\"T\"))[0]) ;\r\n        text1.push(res2.data.DailyForecasts[i].Day.IconPhrase);\r\n        let x =((res2.data.DailyForecasts[i].Temperature.Maximum.Value)+(res2.data.DailyForecasts[i].Temperature.Minimum.Value))/2;\r\n         let b=Math.round(x);\r\n        temperature1.push(\r\n          b\r\n          );\r\n     }\r\n     // the the suitable in the reducer with the  arrays above\r\n     dispatch(actions.addToDate(date1));\r\n     dispatch(actions.addToTemperature(temperature1));\r\n     dispatch(actions.addToText(text1));\r\n     \r\n    }\r\n    \r\n    \r\n    function convert(e) {\r\n      debugger\r\n      if(e === 'c')\r\n      {\r\n        dispatch(actions.setTemp( Math.round(temp * 9 / 5) + 32));\r\n        setDegree(\"f\")\r\n        setTo(\"c\")\r\n      }\r\n      else\r\n      {\r\n        dispatch(actions.setTemp( Math.round((temp - 32) * 5 / 9)));\r\n        setDegree(\"c\")\r\n        setTo(\"f\")\r\n        \r\n      }\r\n\r\n      \r\n    }\r\n    return (\r\n\r\n<>\r\n<div className=\"container\">\r\n<div class=\"row\">\r\n    <center>\r\n<div class=\"col\">\r\n   \r\n</div>\r\n</center>\r\n  \r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-sm-4  font shasowHome\"> Search For Arae:\r\n  <br></br>\r\n  <input onChange={searchCity} />\r\n  <br></br>\r\n      {regions != '' && regions.map(item => (\r\n          <div id=\"aaa\" >\r\n    <a   id=\"areaToChoose\" onClick={() => chooseCity(item)}>{item.LocalizedName}</a>\r\n    <br></br>\r\n    </div>\r\n    \r\n))}\r\n</div>\r\n \r\n  <div class=\"col-sm-8\">\r\n      <br></br>\r\n  <div class=\"card text-center bshadow\" >\r\n  <div >\r\n      <br></br>\r\n  <button class=\"btn btn-primary bshadow fontButtonds\" style={{ backgroundColor: 'black' }}  onClick={() => dispatch(actions.addToFavourites(favorite))} >Add to favourites</button>\r\n  <br></br>\r\n  <br></br>\r\n  </div >\r\n  \r\n  <div >\r\n    <h5 >{currentCity}    {temp}{degree} <button  style={{borderRadius:'50%',width:'2rem',height:'2rem'}}  onClick={() => convert(degree)}>{to}</button></h5>\r\n    \r\n    <p >{weatherText}</p>\r\n    \r\n  </div>\r\n<br></br>\r\n\r\n <div class=\"card-footer text-muted container \">\r\n     <br></br>\r\n    <div class=\"row\">\r\n        <br></br>\r\n        <br></br>\r\n       \r\n         <div class=\"col-sm-2\" >\r\n         <div class=\"card bshadow\" >\r\n           <div class=\"card-body\" >\r\n             <h5 class=\"card-title forFiveDays \" >{date[0]}</h5>\r\n             <p class=\"card-text forFiveDays\">{temperature[0]}c</p>\r\n             \r\n           </div>\r\n         </div>\r\n         \r\n       </div>\r\n       <div class=\"col-sm-2\" >\r\n         <div class=\"card bshadow\"  >\r\n           <div class=\"card-body\" >\r\n             <h5 class=\"card-title  forFiveDays\" >{date[1]}</h5>\r\n             <p class=\"card-text forFiveDays\">{temperature[1]}c</p>\r\n             \r\n           </div>\r\n         </div>\r\n         \r\n       </div>\r\n       <div class=\"col-sm-2\" >\r\n         <div class=\"card bshadow\"  >\r\n           <div class=\"card-body\" >\r\n             <h5 class=\"card-title forFiveDays\" >{date[2]}</h5>\r\n             <p class=\"card-text forFiveDays\">{temperature[2]}c</p>\r\n             \r\n           </div>\r\n         </div>\r\n         \r\n       </div>\r\n       <div class=\"col-sm-2\" >\r\n         <div class=\"card bshadow\"  >\r\n           <div class=\"card-body\" >\r\n             <h5 class=\"card-title forFiveDays  \" >{date[3]}</h5>\r\n             <p class=\"card-text forFiveDays\">{temperature[3]}c</p>\r\n             \r\n           </div>\r\n         </div>\r\n         \r\n       </div>\r\n       <div class=\"col-sm-2\"  >\r\n         <div class=\"card bshadow\"  >\r\n           <div class=\"card-body\"  >\r\n             <h5 class=\"card-title forFiveDays\" >{date[4]}</h5>\r\n             <p class=\"card-text forFiveDays\">{temperature[4]}c</p>\r\n             \r\n           </div>\r\n         </div>\r\n         \r\n       </div>\r\n    <div class=\"col-sm-2\">\r\n    <img   className=\" floating\"  src={p1} alt=\"fvfv\" style={{width:'7rem',height:'6rem' , borderRadius:'50%'}}></img>\r\n    </div>\r\n  \r\n</div>\r\n  </div>\r\n  \r\n</div>\r\n    </div>\r\n   \r\n  \r\n</div>\r\n</div>\r\n\r\n\r\n\r\n      </>  \r\n        \r\n        \r\n              \r\n           \r\n\r\n\r\n            \r\n\r\n         \r\n\r\n \r\n      \r\n    )\r\n}\r\n","import produce from 'immer';\r\nimport { useState } from 'react';\r\nimport { act } from 'react-dom/test-utils';\r\n\r\nimport { actions } from '../actions';\r\nimport createReducer from './ReducerUtils';\r\n\r\n\r\nexport const SET_PRODUCT_NAME = 'SET_PRODUCT_NAME';\r\nexport const SET_PRODUCT_PRICE = 'SET_PRODUCT_PRICE';\r\nconst initialState = {\r\n\r\n    currentCity:\"Tel-Aviv\",\r\n    weatherText:\"sunny \",\r\n    key:\"90\",\r\n    temp:\"34\",\r\n    regions:[],\r\n    favourites:[],\r\n    fiveDays:[],\r\n    date: [\"22.08.2021\",\"24.08.2021\",\"25.08.2021\",\"26.08.2021\",\"27.08.2021\"],\r\n    temperature:[\"27\",\"31\",\"33\",\"28\",\"30\"],\r\n    text:[\"suuny\",\"suuny\",\"cloudy\",\"rainy\",\"suuny\"]\r\n\r\n}\r\nconst weather = {\r\n    \r\n    addToDate(state = initialState, action) {\r\n        debugger\r\n        //const newCart = [...state.cart, action.payload];\r\n        state.date = action.payload;\r\n        console.log(initialState.date);\r\n    },\r\n    addToTemperature(state = initialState, action) {\r\n        debugger\r\n        //const newCart = [...state.cart, action.payload];\r\n        state.temperature = action.payload;\r\n        console.log(initialState.date);\r\n    },\r\n    addToText(state = initialState, action) {\r\n        state.text = action.payload;\r\n        \r\n    },\r\n    addToFavourites(state = initialState, action) {\r\n       \r\n        const newFavourites = [...state.favourites, action.payload];\r\n        state.favourites = newFavourites;\r\n       \r\n    },\r\n    deleteFromFavourites(state = initialState.favourites, action) {\r\n       \r\n        let arr = action.payload[1]\r\n        arr = arr.filter((item) => item.id !== action.payload[1][action.payload[0]].id).map(({ id, name, weatherText }) => ({ id, name, weatherText }));\r\n        state.favourites = arr;\r\n        // console.log(state.cart.length); ‏\r\n    },\r\n    \r\n    addToRegions(state = initialState, action) {\r\n       \r\n        state.regions=action.payload;\r\n        \r\n    },\r\n    setCurrentCity(state=initialState,action){\r\n        \r\n    state.currentCity=action.payload;\r\n    },\r\n    setKey(state=initialState,action){\r\n        \r\n        state.key=action.payload;\r\n        },\r\n    setWeatherText(state=initialState,action){\r\n      \r\n    state.weatherText=action.payload;\r\n    },\r\n    setTemp(state=initialState,action){\r\n\r\n    state.temp=action.payload;\r\n    },\r\n\r\n};\r\nexport default produce((state, action) => createReducer(state, action, weather), initialState);\r\n","function convertActionTypeToName(actionType) {\r\n    return actionType.toLowerCase().replace(/_(\\w)/g, v => v[1].toUpperCase());\r\n}\r\n\r\nexport default function createReducer(state, action, handlers) {\r\n    const key = convertActionTypeToName(action.type);\r\n    const handler = handlers[key];\r\n    if (handler) {\r\n        handler(state, action);\r\n    }\r\n}","import { createStore, combineReducers } from 'redux';\r\nimport WeatherReducer from './reducers/WeatherReducer';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    WeatherReducer\r\n});\r\nconst store = createStore(reducer);\r\nwindow.store = store;\r\nexport default store;","\r\nimport React from 'react';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport WeatherReducer from '../../Store/reducers/WeatherReducer';\r\nimport { actions  } from '../../Store/actions';\r\nimport { BrowserRouter as Router, Switch, Route, Link, withRouter, useParams } from \"react-router-dom\";\r\nimport Home from '../Home/Home';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from '../../Store/store';\r\nimport { useHistory } from \"react-router-dom\";\r\nexport default function Favorites() {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const favorites = useSelector((state) => state.WeatherReducer.favourites);\r\n    const key = useSelector((state) => state.WeatherReducer.key);\r\n    const date = useSelector((state) => state.WeatherReducer.date);\r\n    const temperature = useSelector((state) => state.WeatherReducer.temperature);\r\n    const text = useSelector((state) => state.WeatherReducer.text);\r\n   \r\n\r\n    const toHomePage = async (item) => {\r\n        debugger\r\n       \r\n      //set the current values to cityName and waetherText\r\n       dispatch(actions.setCurrentCity(item.name));\r\n       dispatch(actions.setWeatherText(item.weatherText));\r\n       //back to honePage\r\n       history.push(\"/Home\");\r\n        \r\n\r\n       \r\n    }\r\n    \r\n    \r\n \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <center className=\"fontButtonds\">\r\n           My Favorites\r\n           </center>\r\n           <br></br>\r\n            <div class=\" container\">\r\n            \r\n    <div class=\"row\">\r\n        <br></br>\r\n        {favorites != '' && favorites.map((item,index) => (\r\n         <div class=\"col-sm-2\"  style={{width:'15rem'}}  >\r\n         <div class=\"card bshadow\">\r\n           <div class=\"card-body\">\r\n             <h5 class=\"card-title  fontButtonds\" onClick={() => toHomePage(item)}>{item.name}</h5>\r\n             <p class=\"card-text fontButtonds\" style={{fontSize:'15px'}}   >{item.weatherText}</p>\r\n             <button className=\"btn btn-danger bshadow fontButtonds\" style={{ backgroundColor: 'black' ,fontSize:'13px'}} onClick={(e) => dispatch(actions.deleteFromFavourites([index, favorites]))}>‏\r\n    Remove From Favourites\r\n    </button>\r\n           </div>\r\n         </div>\r\n         \r\n       </div>\r\n    \r\n))}\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n\r\n            {/* { favorites != '' && favorites.map((item, index) => (\r\n\r\n<div className=\"card\" style={{ width: '13rem'}}>\r\n    <div className=\"card-body\">\r\n        <h5 class=\"card-title\">{item.name}</h5>\r\n        \r\n        <br></br>\r\n        <span><b>  {item.weatherText}</b></span>\r\n    </div>\r\n    <button className=\"btn btn-danger bshadow fontButtonds\" style={{ backgroundColor: 'black' }} onClick={(e) => dispatch(actions.deleteFromFavourites([index, favorites]))}>‏\r\n    Remove From Favourites\r\n    </button>\r\n    <div>\r\n    </div>\r\n</div>\r\n))} */}\r\n           \r\n          </div>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport React  , { useState }from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route, Link, withRouter, useParams } from \"react-router-dom\";\nimport Home from './Components/Home/Home'\nimport Favorites from './Components/Favorites/Favorites'\nimport store from './Store/store';\nimport { useEffect } from 'react';\nimport Geo from './Components/Geo';\n\nimport p1 from './Components/Pictuers/p1.png'\nexport default function App() {\n  const currentCity = useSelector((state) => state.WeatherReducer.currentCity);\n  \n    return (\n        <div >\n          <center>\n          <div className=\"shasow fontP\" >\n          <b> Weather</b>\n          {/* <Geo></Geo> */}\n          \n          </div>\n\n          \n          </center>\n          \n         \n            <Router>\n                <nav style={{ backgroundColor: 'lightblue', height: '80px' }}>\n                    <br></br>\n                    <div className=\"container\">\n                        <div className=\"row\">\n\n                            <div className=\"col col-sm-1\">\n                                <button className=\"btn btn-outline-dark\"><Link to=\"/Home\"><span style={{ color: 'white'}}><b>Home</b></span></Link></button>\n                            </div>\n                            <div className=\"col col-sm-1\">\n                                <button className=\"btn btn-outline-dark\"><Link to=\"/Favorites\"><span style={{ color: 'white' }}><b>Favorites</b></span></Link></button>\n                            </div>\n                            \n                            <div style={{color:'white',fontFamily:'cursive',fontSize:'30px'}} className=\"col col-sm-8   \"    >\n                              <center   >{currentCity}</center>\n                        \n                            </div>\n                           <div className=\"col col-sm-1\">\n                           </div>\n                        </div>\n                    </div>\n                    <br></br>\n                    <br></br>\n                </nav>\n                <div style={{ backgroundColor: 'black', height: '20px' }}></div>\n                <Switch>\n                    <Route path=\"/Home\">\n                      <Provider  store={store}>\n                        <Home>\n\n                        </Home>\n                        </Provider>\n                    </Route>\n                    <Route path=\"/Favorites\">\n                       \n                   <Favorites></Favorites>         \n                       \n                    </Route>\n                   \n                   \n                </Switch>\n            </Router>\n        </div>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n import store from './Store/store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}